% PROYECTO FINAL VIBRATORIA FORZADAS SIN PENDULO

clc; clear;

% Definicion de variables
m = 36000;
n = 3;
E = 23500 * 10^6;
I = 1.56 * 10^(-4);
h = 3;
k = 2 * 12 * E * I / h^3;
zita = [0.05; 0.05; 0.05];
g = 9.81;

% Definicion de matrices de masas y rigidez
M_masas = diag(repmat(m, 1, n));
K_rigidez = [2 * k, -k, 0;
            -k, 2 * k, -k;
             0, -k,   k];

% Valores iniciales
x0 = [0; 0; 0.1];
v0 = [0; 0; 0];
P0 = [10000; 10000; 10000];

% Calculo de autovalores y autovectores normalizados
[V, lambda] = eig(K_rigidez, M_masas);
w = diag(sqrt(lambda));

% Normalizar los autovectores
V_norm = V ./ V(1,:);

% Calculo de masas y rigideces modales
M_modal = V'*M_masas* V;
K_modal = V'*K_rigidez* V;

% Paso a coordenadas modales
y0 = V'*M_masas*x0;
vy0 = V'*M_masas*v0;
P0_modal = V'*P0;

% CALCULO DE EDO CON AMORTIGUACION

% Tiempos
tf = 15;
dt = 0.00001;
t = 0:dt:tf;

% Frecuencias naturales amortiguadas
wd = w .* sqrt(1 - zita.^2);

% Matriz de amortiguación modal
C_modal = 2 * zita .* w .* eye(size(M_modal));

% Inicializar matriz de desplazamientos modales
yt = zeros(length(w),length(t));

% Calcular desplazamientos modales en el tiempo
wf = w(1)*[1.1; 1.1; 1.1]; 
ro = zeros(size(w));
D = zeros(size(w));
beta = zeros(size(w));
fi = zeros(size(w));

for i = 1:length(w)
    beta(i) = wf(i)/w(i);
    D(i) = 1/(sqrt((1-beta(i)^2)^2 + (2*zita(i)*beta(i)^2)));
    ro(i) = P0_modal(i)/K_modal(i, i) * D(i);
    fi(i) = atan((2*zita(i)*beta(i))/(1-beta(i)^2));
    yt(i, :) = ro(i) * sin(wf(i)*t-fi(i));
end

xt = V * yt;

% Graficar la solución
figure;
plot(t, xt(1,:), 'r', t, xt(2,:), 'g', t, xt(3,:), 'b');
xlabel('Tiempo');
ylabel('Desplazamientos (ROJO 1, VERDE 2, AZUL 3)');
title('Respuesta del sistema en vibraciones forzadas SIN PENDULO');

